[{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://giocomai.github.io/latlon2map/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 EDJNet  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. longlat2map Copyright (C) 2020 EDJNet This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://giocomai.github.io/latlon2map/articles/removing_the_boring.html","id":"getting-the-data","dir":"Articles","previous_headings":"","what":"Getting the data","title":"Removing the boring parts from geocomputation with European data","text":"core idea latlon2map make process caching geographic datasets frictionless also transparent possible. first thing set folder data cached. normally folder sync, e.g.  functions get maps start ll_get_ facilitate auto-completion, output sf objects crs 4326. , can directly used graphs, without even need store separate objects. want map local administrative units UK, example, can run following code. plot chunk uk_lau first time run download data Eurostat’s website, unzip , import sf object, store locally quick retrieval. means run piece code second time, print map almost instantly. example code NUTS2 regions Italy. plot chunk it_nuts2_lr higher resolution: plot chunk it_nuts2_hr Check available options looking help files, e.g. ?ll_get_nuts_eu. package may include data statistical services; currently, integrates geographic data published Istat Italy higher detail. example shows boundary city Bologna, Italy. data specific geographic unit also cached separately, second run code give result almost immediately (clarify: open full dataset filter Bologna, open pre-cached file data Bologna increase speed reduce memory requirements). plot chunk bologna_lau_hr important code can easily shared work even geographics datasets previously present computer code run. Even many different projects using data, one copy need stored given workstation. Information copyright displayed console call function unless silent = TRUE enabled. original shapefiles accompanying documentation remains stored folder ll_data.","code":"library(\"ggplot2\", quietly = TRUE) library(\"dplyr\", quietly = TRUE) library(\"sf\", quietly = TRUE)  library(\"latlon2map\") ll_set_folder(path = \"~/R\") #> [1] \"~/R\" ggplot()+   geom_sf(data = ll_get_lau_eu() %>%             filter(CNTR_CODE == \"UK\")) #> ℹ © EuroGeographics for the administrative boundaries ggplot()+   geom_sf(data = ll_get_nuts_eu(level = 2) %>%             filter(CNTR_CODE == \"IT\")) #> ℹ © EuroGeographics for the administrative boundaries #> ℹ Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/countries ggplot()+   geom_sf(data = ll_get_nuts_eu(level = 2, resolution = 1) %>%             filter(CNTR_CODE == \"IT\")) #> ℹ © EuroGeographics for the administrative boundaries #> ℹ Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/countries ggplot()+   geom_sf(data = ll_get_nuts_it(name = \"Bologna\",                                 level = \"lau\",                                 resolution = \"high\")) #> ℹ Source: https://www.istat.it/it/archivio/222527 #> ℹ Istat (CC-BY)"},{"path":"https://giocomai.github.io/latlon2map/articles/removing_the_boring.html","id":"getting-the-right-proportions","dir":"Articles","previous_headings":"","what":"Getting the right proportions","title":"Removing the boring parts from geocomputation with European data","text":"Another small nuisance related including post maps areas different proportions. example, Portugal Netherlands different shapes, ’d like maps post height/width ratio. slightly complicated fact scales degrees, take effort get get right. function ll_bbox takes care , instead maps wide, tall, e.g.  plot chunk sweden_bw_thin …can proportion. plot chunk sweden_be_4_3","code":"remotes::install_github(\"paleolimbot/ggspatial\", upgrade = \"never\", quiet = TRUE) library(\"ggspatial\")  sf_reference <- ll_get_nuts_eu(level = 2, resolution = 1) %>% filter(CNTR_CODE == \"SE\")  ggplot() +     annotation_map_tile(type = \"stamenbw\",                         zoomin = 0,                         cachedir = fs::path(ll_set_folder(), \"ll_data\")) +   geom_sf(data = sf_reference, colour = \"darkred\", fill = NA) ggplot() +     annotation_map_tile(type = \"stamenbw\", zoomin = 0, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +     geom_sf(data = sf::st_as_sfc(ll_bbox(sf = sf_reference,ratio = \"4:3\")), fill = NA, color = NA) +   geom_sf(data = sf_reference, colour = \"darkred\", fill = NA) #> Zoom: 5 #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 #> +units=m +nadgrids=@null +wktext +no_defs #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> datum WGS_1984 in CRS definition #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 #> +units=m +nadgrids=@null +wktext +no_defs #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> datum WGS_1984 in CRS definition"},{"path":"https://giocomai.github.io/latlon2map/articles/removing_the_boring.html","id":"get-the-population-grid","dir":"Articles","previous_headings":"","what":"Get the population grid","title":"Removing the boring parts from geocomputation with European data","text":"complex geographic data simple boundary lines. Eurostat example published population grid, pointing many people lives square km continent. data can useful number analyses, tend come big files. , lonlat2map caches result, including pre-processed data consistent name provided. [following code chunks evaluated facilitating auto-deploy website vignette] plot chunk viewnna_pop_grid","code":"name <- \"Wien\"  sf_location <- ll_get_lau_eu(name = name)    desired_bbox <- st_as_sfc(ll_bbox(sf = sf_location, ratio = \"16:9\"))    lau_grid_name <- stringr::str_c(name, \"_lau_high-st_intersects\")      sf_location_grid <- ll_get_population_grid(match_sf = sf_location,                                            match_name = lau_grid_name,                                            match_country = \"AT\",                                            join = sf::st_intersects,                                            silent = TRUE) %>%   dplyr::rename(`Nr. of residents` = TOT_P)  ggplot() +     annotation_map_tile(type = \"stamenbw\", zoomin = 0, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +     geom_sf(data = desired_bbox, fill = NA, color = NA) +     geom_sf(data = sf_location_grid,             mapping = aes(fill = `Nr. of residents`), alpha = 0.5) +   scale_fill_viridis_c() +     geom_sf(data = sf_location,             colour = \"darkred\",             size = 2,             fill = NA,             alpha = 0.8) +       labs(title = paste(sf_location$LAU_LABEL),         subtitle = \"Administrative boundaries and population grid\",        caption = \"Source: © EuroGeographics for the administrative boundaries        Data source population grid information: Eurostat, EFGS        Map tiles by Stamen Design, under CC BY 3.0        Base map data by OpenStreetMap, under ODbL.\")"},{"path":"https://giocomai.github.io/latlon2map/articles/removing_the_boring.html","id":"population-weighted-centre","dir":"Articles","previous_headings":"","what":"Population-weighted centre","title":"Removing the boring parts from geocomputation with European data","text":"lonlat2map includes convenience functions deal normally tedious processes, e.g. finding population-weighted center area. plot chunk pop_weighted_centre_palmanova function flexible, can used granular population data distributed Facebook, can loaded function ll_get_population_grid_hr(). plot chunk pop_weighted_centre_palmanova_hr","code":"name = \"Palmanova\" sf_location <- ll_get_nuts_it(name = name, level = \"lau\", resolution = \"high\", silent = TRUE)  centroid <- sf::st_centroid(sf_location %>%                               sf::st_transform(crs = 3857)) %>%   sf::st_transform(crs = 4326) #> Warning in st_centroid.sf(sf_location %>% sf::st_transform(crs = 3857)): st_centroid assumes attributes #> are constant over geometries of x  desired_bbox <- st_as_sfc(ll_bbox(sf = sf_location, ratio = \"4:3\"))  lau_grid_name_temp <- stringr::str_c(name, \"_lau_high-st_intersects\")  sf_location_grid <- ll_get_population_grid(match_sf = sf_location,                                            match_name = lau_grid_name_temp,                                            match_country = \"IT\",                                            join = sf::st_intersects,                                            silent = TRUE)  pop_centroid <- ll_find_pop_centre(sf_location = sf_location,                                    sf_population_grid = sf_location_grid,                                    power = 2) #> Warning in st_centroid.sf(.): st_centroid assumes attributes are constant over geometries of x  ggplot() +     annotation_map_tile(type = \"stamenbw\", zoomin = 0, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +     geom_sf(data = desired_bbox, fill = NA, color = NA) +     geom_sf(data = sf_location_grid %>% rename(`Nr. of residents` = TOT_P),             mapping = aes(fill = `Nr. of residents`), alpha = 0.5) +   scale_fill_viridis_c() +     geom_sf(data = sf_location,             colour = \"darkred\",             size = 2,             fill = NA,             alpha = 0.8) +     geom_sf(data = centroid,           colour = \"darkred\",           fill = \"coral\",           size = 5,           shape = 21,           alpha = 0.8) +   geom_sf(data = pop_centroid,           colour = \"blue4\",           fill = \"cornflowerblue\",           size = 5,           shape = 21,           alpha = 0.8) +       labs(title = paste(sf_location$COMUNE),         subtitle = \"Administrative boundaries and population grid Centroid in red, population-weighted centre in blue\",        caption = \"Source: © EuroGeographics for the administrative boundaries        Data source population grid information: Eurostat, EFGS        Map tiles by Stamen Design, under CC BY 3.0        Base map data by OpenStreetMap, under ODbL.\") #> Zoom: 14 #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 #> +units=m +nadgrids=@null +wktext +no_defs #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> datum WGS_1984 in CRS definition #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 #> +units=m +nadgrids=@null +wktext +no_defs #> Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded #> datum WGS_1984 in CRS definition lau_grid_name_temp <- stringr::str_c(name, \"_lau_hr-st_intersects\")  sf_location_grid_hr <- ll_get_population_grid_hr(geo = \"IT\",                            match_sf = sf_location,                           match_name = lau_grid_name_temp,                           join = sf::st_intersects,                           silent = TRUE)  pop_centroid_hr <- ll_find_pop_centre(sf_location = sf_location,                                        sf_population_grid = sf_location_grid_hr,                                        power = 5)  ggplot() +     annotation_map_tile(type = \"stamenbw\", zoomin = 0, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +     geom_sf(data = desired_bbox, fill = NA, color = NA) +     geom_sf(data = sf_location_grid_hr %>% rename(`Nr. of residents` = Population),             mapping = aes(colour = `Nr. of residents`), alpha = 0.5) +   scale_colour_viridis_c() +     geom_sf(data = sf_location,             colour = \"darkred\",             size = 2,             fill = NA,             alpha = 0.8) +     geom_sf(data = centroid,           colour = \"darkred\",           fill = \"coral\",           size = 5,           shape = 21,           alpha = 0.8) +   geom_sf(data = pop_centroid_hr,           colour = \"blue4\",           fill = \"cornflowerblue\",           size = 5,           shape = 21,           alpha = 0.8) +       labs(title = paste(sf_location$COMUNE),         subtitle = \"Administrative boundaries and population grid Centroid in red, population-weighted centre in blue\",        caption = \"Source: © EuroGeographics for the administrative boundaries        Facebook High Resolution Population Density Maps (CC-BY)        Map tiles by Stamen Design, under CC BY 3.0        Base map data by OpenStreetMap, under ODbL.\")"},{"path":"https://giocomai.github.io/latlon2map/articles/removing_the_boring.html","id":"more-to-come","dir":"Articles","previous_headings":"","what":"More to come","title":"Removing the boring parts from geocomputation with European data","text":"package started writing blog post, everything may work smoothly stage. Feel free get touch author file issue GitHub. Future versions lonlat2map integrated support data sources, well additional functions facilitate common use cases.","code":""},{"path":"https://giocomai.github.io/latlon2map/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giorgio Comai. Author, maintainer.","code":""},{"path":"https://giocomai.github.io/latlon2map/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Comai G (2023). latlon2map: Facilitates matching lat/lon data administrative units geographic shapes. R package version 0.0.0.9005, https://giocomai.github.io/latlon2map/.","code":"@Manual{,   title = {latlon2map: Facilitates matching lat/lon data with administrative units and other geographic shapes},   author = {Giorgio Comai},   year = {2023},   note = {R package version 0.0.0.9005},   url = {https://giocomai.github.io/latlon2map/}, }"},{"path":"https://giocomai.github.io/latlon2map/index.html","id":"latlon2map","dir":"","previous_headings":"","what":"Facilitates matching lat/lon data with administrative units and other geographic shapes","title":"Facilitates matching lat/lon data with administrative units and other geographic shapes","text":"goal latlon2map make simple process spatial data, match tabular data distributed spreadsheets longitude/latitude columns various geographical units based shapefile distributed statistical offices Eurostat. package includes number convenience functions download cache locally pre-processed files reduce boilerplate code commonly found data projects, hopefully speeding data pipeline favouring reproducibility. dafault, latlon2map stores downloaded files current working directory. However, makes easy keep single folder, preventing common issue multiple copies geographic files data project computer. code remains transferrable reproducible, missing files simply downloaded fly unavaiable locally.","code":""},{"path":"https://giocomai.github.io/latlon2map/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilitates matching lat/lon data with administrative units and other geographic shapes","text":"can install latlon2map GitHub :","code":"remotes::install_github(\"giocomai/latlon2map\")"},{"path":"https://giocomai.github.io/latlon2map/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Facilitates matching lat/lon data with administrative units and other geographic shapes","text":"latlon2map function starts ll_ facilitate auto-completion. default, data stored folder called ll_data inside working directory. However, suggest caching data separate folder system-wide caching: need re-download geographic files different projects, unncessarily sync multiple copies files project needs . need call e.g. ll_set_folder(\"~/R/\") per session. Given may well download big files take longer 60 seconds download, advised set reasonably high timeout downloads beginning session. currently number functions facilitating downloads geographic datasets, mostly Eurostat’s website. return sf objects, transformed crs 4326, keeping columns present original dataset. Future versions likely add standard-named columns facilitate matching data different datasets. reference original data kept ll_data/shp/ folder, possible check metadata dataset. Information copyright printed console time given data source used. Functions calls ll_get_world(resolution = 60) can safely used usually place sf object/data frame. download items locally available, simply load pre-processed data following calls. Check package vignette details, examples, use cases.","code":"library(\"latlon2map\") ll_set_folder(fs::path(fs::path_home_r(),                               \"R\",                               \"ll_data\")) #> /home/g/R/ll_data options(timeout = 6000)"},{"path":"https://giocomai.github.io/latlon2map/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"Facilitates matching lat/lon data with administrative units and other geographic shapes","text":"package includes shiny app facilitates matching latitude/longitude data frames wtih geographic units.","code":"ll_app()"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — ll_app","title":"Run the Shiny Application — ll_app","text":"Run Shiny Application","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — ll_app","text":"","code":"ll_app(max_file_size = 100, ll_folder_path = NULL, ...)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — ll_app","text":"max_file_size Maximum file size accept upload expressed MB, defaults 100. ll_folder_path given, sets folder use caching, corresponds ll_set_folder(). Useful e.g. Docker deployments. Defaults NULL. ... series options used inside app.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a bounding box with a consistent, user given ratio — ll_bbox","title":"Provide a bounding box with a consistent, user given ratio — ll_bbox","text":"useful particular make geom_sf()-based ggplots consistent aspect ratio.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a bounding box with a consistent, user given ratio — ll_bbox","text":"","code":"ll_bbox(sf, ratio = \"4:3\")"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a bounding box with a consistent, user given ratio — ll_bbox","text":"sf sf object. ratio Defaults \"4:3\". chacters string, form e.g. \"4:3\" \"16:9\" \"1:1\" (values possible)","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a bounding box with a consistent, user given ratio — ll_bbox","text":"bounding box vector, sf::st_bbox(), given ratio set compatible crs 4326.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a bounding box with a consistent, user given ratio — ll_bbox","text":"","code":"if (FALSE) { # The following two graphs will have same 4:3 aspect ratio ll_set_folder(\"~/R/\") library(\"ggspatial\")  sf_location <- ll_get_nuts_it(name = \"Palmanova\", level = \"lau\", resolution = \"low\")  ggplot() +   annotation_map_tile(type = \"osm\", zoomin = -1, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +   geom_sf(data = sf::st_as_sfc(ll_bbox(sf_location)), fill = NA, color = NA) +   geom_sf(     data = sf_location,     colour = \"darkred\",     size = 2,     fill = NA,     alpha = 0.8   )   sf_location <- ll_get_nuts_it(name = \"Pinzolo\", level = \"lau\", resolution = \"low\")  ggplot() +   annotation_map_tile(type = \"osm\", zoomin = -1, cachedir = fs::path(ll_set_folder(), \"ll_data\")) +   geom_sf(data = sf::st_as_sfc(ll_bbox(sf_location)), fill = NA, color = NA) +   geom_sf(     data = sf_location,     colour = \"darkred\",     size = 2,     fill = NA,     alpha = 0.8   ) }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_create_folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folders to store geographic data — ll_create_folders","title":"Create folders to store geographic data — ll_create_folders","text":"Create folders store geographic data","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_create_folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folders to store geographic data — ll_create_folders","text":"","code":"ll_create_folders(   geo,   level,   resolution,   year,   file_type = c(\"shp\", \"zip\", \"rds\") )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_create_folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folders to store geographic data — ll_create_folders","text":"geo geographic unit reference two-letter code level E.g. NUTS0, NUTS1, county, state, ecc. resolution Either resolution level given data distributor, generic \"high\", \"low\", \"default file_type defaults, creates folder zip, shp, rds files.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_export_sf_to_kml.html","id":null,"dir":"Reference","previous_headings":"","what":"Export sf objects into kml file that can be used with Google Earth, Google Maps, etc. — ll_export_sf_to_kml","title":"Export sf objects into kml file that can be used with Google Earth, Google Maps, etc. — ll_export_sf_to_kml","text":"Attention: function requires libkml.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_export_sf_to_kml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export sf objects into kml file that can be used with Google Earth, Google Maps, etc. — ll_export_sf_to_kml","text":"","code":"ll_export_sf_to_kml(   sf,   path,   name = NULL,   keep_other_columns = TRUE,   description = NULL,   label_text = NULL,   label_font = \"Roboto Sans, Noto Sans, Helvetica\",   label_size = \"24pt\",   label_placement = \"m\",   label_scale = NULL,   line_colour = \"#ffffffff\",   line_width = \"3px\",   icon_url = \"\",   icon_colour = \"#000000ff\",   icon_scale = NULL,   fill_colour = NULL )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_export_sf_to_kml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export sf objects into kml file that can be used with Google Earth, Google Maps, etc. — ll_export_sf_to_kml","text":"sf object class sf path Path save .kml output. name Column used names. keep_other_columns Logical, defaults TRUE. want keep output data columns present original sf object, set FALSE. description Column used description. label_text Column used label text. Defaults NULL. Corresponds \"LABEL\" element OGR. label_font Font family used font. Defaults \"Roboto Sans, Noto Sans, Helvetica\" label_size Size label. Defaults \"24pt\" label_placement Defaults \"m\" (centre middle-aligned). options, check: https://gdal.org/user/ogr_feature_style.html label_scale Scale label. Defaults NULL. given, changes label size (e.g. 1 = default, 2 = twice big, 0.5, half big, etc.) line_colour Defaults \"#ffffffff\" (.e. white, 100% opacity). Line corresponds \"PEN\" OGR. Accepts 8-digit hex codes include transparency. line_width Defaults \"3pt\". Line corresponds \"PEN\" OGR. Besides pt (points), acceptable units g: Map Ground Units (whatever map coordinate units ), px Pixels, pt Points (1/72 inch), mm Millimeters, cm Centimeters, Inches. icon_url Defaults \"\" URL. Corresponds \"SYMBOL\" OGR. case wrong inputs, Google Earth may show ugly yellow pushpin instead (.e. default http://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png). Available icons offered Google available link: http://kml4earth.appspot.com/icons.html icon_colour Defaults \"#000000ff\" (.e. black, 100% opacity). icon_scale Defaults NULL. given, changes icon size (e.g. 1 = default, 2 = twice big, 0.5, half big, etc.) fill_colour Defaults NULL. Fill corresponds \"BRUSH\" OGR. given, colour used filling polygons.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_export_sf_to_kml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export sf objects into kml file that can be used with Google Earth, Google Maps, etc. — ll_export_sf_to_kml","text":"Attention: label styling currently functional, likely due issues passing arguments libkml. order change label size, use label_scale, directly edits xml file. details exact meaning parameters, please consult documentation OGR (used GDAL pass parameters .kml): https://gdal.org/user/ogr_feature_style.html","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Find file names. Mostly used internally — ll_find_file","title":"Find file names. Mostly used internally — ll_find_file","text":"Find file names. Mostly used internally","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find file names. Mostly used internally — ll_find_file","text":"","code":"ll_find_file(geo, level, resolution, year, name = \"abl\", file_type = \"rds\")"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find file names. Mostly used internally — ll_find_file","text":"name Name specific dataset downloaded. Defaults abl, .e. administrative boundary line file_type","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_pop_centre.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the population-weighted centre of a municipality — ll_find_pop_centre","title":"Find the population-weighted centre of a municipality — ll_find_pop_centre","text":"Find population-weighted centre municipality","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_pop_centre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the population-weighted centre of a municipality — ll_find_pop_centre","text":"","code":"ll_find_pop_centre(   sf_location,   sf_population_grid,   power = 2,   join = sf::st_intersects,   adjusted = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_pop_centre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the population-weighted centre of a municipality — ll_find_pop_centre","text":"power Defaults 2. give weight cells higher population density, raise number residents power . join Defaults sf::st_intersects. adjusted adjusted set TRUE, join ignored. population cells along boundary line weighted share cell included within border.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_find_pop_centre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the population-weighted centre of a municipality — ll_find_pop_centre","text":"","code":"ll_set_folder(\"~/R/\") #> [1] \"~/R/\" name <- \"Pinzolo\" sf_location <- ll_get_nuts_it(name = name, level = \"lau\", resolution = \"high\") #> ℹ Source: https://www.istat.it/it/archivio/222527 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/non_generalizzati/Limiti01012022.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/non_generalizzati/Limiti01012022.zip'  lau_grid_name_temp <- stringr::str_c(name, \"_lau_high-st_intersects\")  sf_location_grid <- ll_get_population_grid(   match_sf = sf_location,   match_name = lau_grid_name_temp,   match_country = \"IT\",   join = sf::st_intersects ) #> ℹ Data source population grid information: Eurostat, EFGS #> ℹ Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/population-distribution-demography/geostat #> Error in ll_get_population_grid(match_sf = sf_location, match_name = lau_grid_name_temp,     match_country = \"IT\", join = sf::st_intersects): object 'sf_location' not found   pop_centre <- ll_find_pop_centre(   sf_location = sf_location,   sf_population_grid = sf_location_grid,   power = 2 ) #> Error in is.data.frame(x): object 'sf_location_grid' not found"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_adm_ocha.html","id":null,"dir":"Reference","previous_headings":"","what":"Get administrative boundary lines from OCHA database — ll_get_adm_ocha","title":"Get administrative boundary lines from OCHA database — ll_get_adm_ocha","text":"Source: https://data.humdata.org/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_adm_ocha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get administrative boundary lines from OCHA database — ll_get_adm_ocha","text":"","code":"ll_get_adm_ocha(   geo,   level = 0,   match_name = NULL,   source_url = NULL,   silent = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_adm_ocha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get administrative boundary lines from OCHA database — ll_get_adm_ocha","text":"geo twe letter country code, \"\" Italy \"DE\" Germany match_name name used local caching subset grid used. responsibility user keept consistent. given, data cached locally. source_url direct link zipped version csv file original database, automatic download country code work. example, Italy \"https://data.humdata.org/dataset/0eb77b21-06be-42c8-9245-2edaff79952f/resource/1e96f272-7d86-4108-b4ca-5a951a8b11a0/download/population_ita_2019-07-01.csv.zip\" silent","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_adm_ocha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get administrative boundary lines from OCHA database — ll_get_adm_ocha","text":"","code":"if (interactive) {   ll_get_adm_ocha(geo = \"UA\", level = 3) } #> Error in if (interactive) {    ll_get_adm_ocha(geo = \"UA\", level = 3)}: argument is not interpretable as logical"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_electoral_districts_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","title":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","text":"2022 / WGS 84 / UTM zone 32N","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_electoral_districts_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","text":"","code":"ll_get_electoral_districts_it(   name = NULL,   level = \"Circoscrizioni_Camera\",   year = 2022,   silent = FALSE,   no_check_certificate = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_electoral_districts_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","text":"level Defaults \"Circoscrizioni_Camera\". Valid values: \"Circoscrizioni_Camera\": Basi geografiche delle circoscrizioni elettorali - Camera dei deputati \"Regioni_Senato\": Basi geografiche delle circoscrizioni elettorali - Senato della Repubblica \"CAMERA_CollegiPLURINOMINALI_2020\": Basi geografiche dei collegi elettorali plurinominali - Camera dei deputati \"CAMERA_CollegiUNINOMINALI_2020\": Basi geografiche dei collegi elettorali uninominali - Camera dei deputati \"SENATO_CollegiPLURINOMINALI_2020\": Basi geografiche dei collegi elettorali plurinominali - Senato della Repubblica \"SENATO_CollegiUNINOMINALI_2020\": Basi geografiche dei collegi elettorali uninominali - Senato della Repubblica \"UT_Collegi2020\": Basi geografiche delle unità territoriali che formano collegi elettorali (comuni e aree sub-comunali, limitatamente ai comuni di Torino, Genova, Milano, Roma, Napoli e Palermo con territorio ripsrtito su più di un collegio). Geografia comunale vigente alla data della pubblicazione year Defaults 2022 (latest available). Currently year accepted. no_check_certificate Logical, defaults TRUE. Enable certificate issues, aware security implications.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_electoral_districts_it.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","text":"Column names metadata: COD_REG\tCodice della regione/circoscrizione elettorale del Senato della Repubblica DEN_REG\tDenominazione della regione amministrativa/circoscrizione elettorale Senato della Repubblica COD_PRO\tCodice della provincia DEN_P_CM\tDenominazione della provincia o città metropolitana COD_CM\tCodice della città metropolitana PRO_COM\tCodice del comune DEN_COM\tDenominazione del comune CAP_DEN\tDenominazione del capoluogo di provincia o città metropolitana POP_2011\tPopolazione - Censimento 2011 ASC_COD\tCodice concatenato comune e area sub-comunale ASC_COD1\tCodice progressivo area sub-comunale ASC_COD2\tCodice alfanumerico dell'area sub-comunale attribuito dal comune ASC_NOME\tDenominazione dell'area sub-comunale ASC_TIPO\tTipologia di area-sub-comunale CIRC_COD\tCodice della circoscrizione elettorale della Camera dei deputati CIRC_DEN\tDenominazione della circoscrizione elettorale della Camera dei deputati CU20_COD\tCodice del collegio elettorale uninominale della Camera dei deputati CP20_COD\tCodice del collegio elettoraleplurinominale della Camera dei deputati SU20_COD\tCodice del collegio elettorale uninominale del Senato della Repubblica SP20_COD\tCodice del collegio elettorale plurinominale del Senato della Repubblica CU20_DEN\tDenominazione del collegio elettorale uninominale della Camera dei deputati CP20_DEN\tDenominazione del collegio elettorale plurinominale della Camera dei deputati SU20_DEN\tDenominazione del collegio elettorale uninominale del Senato della Repubblica SP20_DEN\tDenominazione del collegio elettorale plurinominale del Senato della Repubblica CU20_C1\tSigla del collegio elettorale uninominale della Camera dei deputati CP20_C1\tSigla del collegio elettorale plurinominale della Camera dei deputati SU20_C1\tSigla del collegio elettorale uninominale del Senato della Repubblica SP20_C1\tSigla del collegio elettorale plurinominale del Senato della Repubblica","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_electoral_districts_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Italian electoral districts (CC-BY Istat) — ll_get_electoral_districts_it","text":"","code":"ll_set_folder(fs::path(fs::path_home_r(), \"R\")) #> /home/runner/R ll_get_electoral_districts_it() #> ℹ https://www.istat.it/it/archivio/273443 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip' ll_get_electoral_districts_it(name = \"Lombardia 2\") #> ℹ https://www.istat.it/it/archivio/273443 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip' ll_get_electoral_districts_it() %>% ggplot2::ggplot() + ggplot2::geom_sf() + ggplot2::labs(title = \"Circoscrizioni Camera\") #> ℹ https://www.istat.it/it/archivio/273443 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip' ll_get_electoral_districts_it(level = \"SENATO_CollegiUNINOMINALI_2020\") %>% ggplot2::ggplot() + ggplot2::geom_sf() + ggplot2::labs(title = \"Collegi uninominali - Senato\") #> ℹ https://www.istat.it/it/archivio/273443 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/Basi%20Geografiche%202022/Collegi_Elettorali_BasiGeografiche.zip'"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_gadm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get administrative boundaries — ll_get_gadm","title":"Get administrative boundaries — ll_get_gadm","text":"Source: https://gadm.org/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_gadm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get administrative boundaries — ll_get_gadm","text":"","code":"ll_get_gadm(geo, level = 0, version = \"4.1\")"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_gadm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get administrative boundaries — ll_get_gadm","text":"geo Three letter country codes. two letter country code given, tentatively converted three-letter country code. Check consistency. level Defaults 0. Available labels, depending data availability specific country, 0 3. version Defaults \"4.0\". Untested others.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_gadm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get administrative boundaries — ll_get_gadm","text":"sf object","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_gadm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get administrative boundaries — ll_get_gadm","text":"","code":"ll_get_gadm(geo = \"UKR\", level = 2) #> ℹ Source: https://gadm.org/ #> ℹ The data are freely available for academic use and other non-commercial use. Redistribution, or commercial use, is not allowed without prior permission. Using the data to create maps for academic publishing is allowed. #> Simple feature collection with 629 features and 13 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 22.14045 ymin: 44.38597 xmax: 40.21807 ymax: 52.37503 #> Geodetic CRS:  WGS 84 #> # A tibble: 629 × 14 #>    GID_2     GID_0 COUNTRY GID_1   NAME_1  NL_NA…¹ NAME_2 VARNA…² NL_NA…³ TYPE_2 #>  * <chr>     <chr> <chr>   <chr>   <chr>   <chr>   <chr>  <chr>   <chr>   <chr>  #>  1 ?         UKR   Ukraine ?       ?       ?       ?      ?       NA      ?      #>  2 UKR.1.1_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Cherk… NA      NA      Mis'k… #>  3 UKR.1.2_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Cherk… NA      NA      Raion  #>  4 UKR.1.3_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Chorn… Chorno… NA      Raion  #>  5 UKR.1.4_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Chyhy… NA      NA      Raion  #>  6 UKR.1.5_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Drabi… NA      NA      Raion  #>  7 UKR.1.6_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Horod… Gorody… NA      Raion  #>  8 UKR.1.7_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Kamia… NA      NA      Raion  #>  9 UKR.1.8_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Kaniv… NA      NA      Misto  #> 10 UKR.1.9_1 UKR   Ukraine UKR.1_1 Cherka… Черкас… Kaniv… NA      NA      Raion  #> # … with 619 more rows, 4 more variables: ENGTYPE_2 <chr>, CC_2 <chr>, #> #   HASC_2 <chr>, geometry <MULTIPOLYGON [°]>, and abbreviated variable names #> #   ¹​NL_NAME_1, ²​VARNAME_2, ³​NL_NAME_2"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_eu.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","title":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","text":"Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/lau#lau18","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_eu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","text":"","code":"ll_get_lau_eu(   gisco_id = NULL,   name = NULL,   year = 2020,   silent = FALSE,   lau_sf = NULL,   fallback = TRUE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_eu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","text":"gisco_id Gisco identifier relevant administrative unit. given, takes precedence name. name Name local administrative unit local language. Use gisco_id whenever possible, names local administrative units unique, e.g. 11 \"Neuenkirchen\" dataset. name gisco_id NULL, returns municipalities. year Year mapping, defaults recent (2020). Available starting 2011. silent Defaults FALSE. TRUE, hides copyright notice. Useful e.g. using reports loops. copyright notice must still shown final output used. lau_sf sf object, exactly one returned ll_get_lau_eu(). Used speed-computation bulk processing.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_eu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","text":"European LAU sf format","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_eu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets local administrative units from Eurostat's website — ll_get_lau_eu","text":"","code":"ll_set_folder(\"~/R/\") #> [1] \"~/R/\" ll_get_lau_eu() #> ℹ © EuroGeographics for the administrative boundaries #> Simple feature collection with 98613 features and 9 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -63.15372 ymin: -21.38881 xmax: 55.83573 ymax: 71.1853 #> Geodetic CRS:  WGS 84 #> # A tibble: 98,613 × 10 #>    GISCO_ID  CNTR_CODE LAU_ID LAU_NAME       POP_2…¹ POP_D…² AREA_…³  YEAR FID   #>  * <chr>     <chr>     <chr>  <chr>            <int>   <dbl>   <dbl> <int> <chr> #>  1 CZ_579475 CZ        579475 Libňatov           363   62.2     5.83  2020 CZ_5… #>  2 CZ_579483 CZ        579483 Libotov            178   41.8     4.26  2020 CZ_5… #>  3 CZ_579491 CZ        579491 Vranov             181   37.4     4.84  2020 CZ_5… #>  4 CZ_579505 CZ        579505 Malá Úpa           142    5.32   26.7   2020 CZ_5… #>  5 AT_41004  AT        41004  Eggendorf im …    1041  116.      8.94  2020 AT_4… #>  6 CZ_579513 CZ        579513 Malé Svatoňov…    1509  222.      6.81  2020 CZ_5… #>  7 CZ_579530 CZ        579530 Maršov u Úpice     191   57.9     3.30  2020 CZ_5… #>  8 CZ_579548 CZ        579548 Mladé Buky        2308   86.4    26.7   2020 CZ_5… #>  9 CZ_579556 CZ        579556 Mostek            1191   88.8    13.4   2020 CZ_5… #> 10 CZ_579564 CZ        579564 Nemojov            761   93.7     8.12  2020 CZ_5… #> # … with 98,603 more rows, 1 more variable: geometry <MULTIPOLYGON [°]>, and #> #   abbreviated variable names ¹​POP_2020, ²​POP_DENS_2, ³​AREA_KM2"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/lau","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"","code":"ll_get_lau_nuts_concordance(lau_year = 2019, nuts_year = 2016, silent = FALSE)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"lau_year Defaults 2019. See ll_lau_nuts_concordance_links details available combinations. nuts_year Defaults 2016. See ll_lau_nuts_concordance_links details available combinations. silent Defaults FALSE. TRUE, hides copyright notice. Useful e.g. using reports loops. copyright notice must still shown final output used.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"tibble correspondence table.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"Warning: due issues original data, nuts may always correspond given year countries, e.g. files nuts 2016 one may find nuts 2013 single country, e.g. Italy. check sources details ensure complete matching.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_nuts_concordance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets correspondence tables between local administrative units and nuts from Eurostat's website — ll_get_lau_nuts_concordance","text":"","code":"ll_set_folder(\"~/R/\") #> [1] \"~/R/\" ll_get_lau_nuts_concordance() #> ℹ For details, see: https://ec.europa.eu/eurostat/web/nuts/local-administrative-units #> Error in loadNamespace(x): there is no package called ‘readxl’ if (FALSE) { lau_with_nuts_df <- ll_get_lau_eu(year = 2018) %>%   sf::st_drop_geometry() %>%   filter(is.na(LAU_NAME) == FALSE) %>%   dplyr::rename(gisco_id = GISCO_ID) %>%   dplyr::left_join(     y = ll_get_lau_nuts_concordance(       lau_year = 2018,       nuts_year = 2016     ),     by = \"gisco_id\"   ) }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_pt.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_lau_pt","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_lau_pt","text":"Source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_pt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_lau_pt","text":"","code":"ll_get_lau_pt(   id = NULL,   name = NULL,   year = 2017,   level = \"concelho\",   silent = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_pt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_lau_pt","text":"id character vector composed six digits. Corresponds \"dicofre\". year Defaults 2017 (latest currently available). level Defaults \"freguesia\". Valid value include \"freguesia\", \"concelho\", \"distrito\", \"des_simpli\".","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_lau_pt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_lau_pt","text":"","code":"ll_set_folder(fs::path(fs::path_home_r(), \"R\")) #> /home/runner/R ll_get_lau_pt() #> ℹ Source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/ #> ℹ dados.gov.pt (CC-BY) #> Simple feature collection with 3223 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -9.517029 ymin: 36.96171 xmax: -6.189159 ymax: 42.15431 #> Geodetic CRS:  WGS 84 #> # A tibble: 3,223 × 9 #>    Dicofre Freguesia               Conce…¹ Distr…² TAA   AREA_…³ AREA_…⁴ Des_S…⁵ #>  * <chr>   <chr>                   <chr>   <chr>   <chr>   <dbl>   <dbl> <chr>   #>  1 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.09   4118. Albufe… #>  2 081504  Sagres                  VILA D… FARO    ÁREA… 3432.     3437. Sagres  #>  3 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  4 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  5 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  6 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  7 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  8 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #>  9 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.02   4118. Albufe… #> 10 080106  Albufeira e Olhos de Á… ALBUFE… FARO    ÁREA…    0.01   4118. Albufe… #> # … with 3,213 more rows, 1 more variable: geometry <POLYGON [°]>, and #> #   abbreviated variable names ¹​Concelho, ²​Distrito, ³​AREA_EA_Ha, ⁴​AREA_T_Ha, #> #   ⁵​Des_Simpli ll_get_lau_pt(name = \"Porto\") #> ℹ Source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/ #> ℹ dados.gov.pt (CC-BY) #> Simple feature collection with 7 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.691294 ymin: 41.13835 xmax: -8.552613 ymax: 41.18594 #> Geodetic CRS:  WGS 84 #> # A tibble: 7 × 9 #>   Dicofre Freguesia                Conce…¹ Distr…² TAA   AREA_…³ AREA_…⁴ Des_S…⁵ #> * <chr>   <chr>                    <chr>   <chr>   <chr>   <dbl>   <dbl> <chr>   #> 1 131218  União das freguesias de… PORTO   PORTO   ÁREA…    559.    559. Lordel… #> 2 131202  Bonfim                   PORTO   PORTO   ÁREA…    310.    310. Bonfim  #> 3 131217  União das freguesias de… PORTO   PORTO   ÁREA…    543.    543. Cedofe… #> 4 131203  Campanhã                 PORTO   PORTO   ÁREA…    804.    804. Campan… #> 5 131216  União das freguesias de… PORTO   PORTO   ÁREA…    627.    627. Aldoar… #> 6 131211  Ramalde                  PORTO   PORTO   ÁREA…    582.    582. Ramalde #> 7 131210  Paranhos                 PORTO   PORTO   ÁREA…    717.    717. Paranh… #> # … with 1 more variable: geometry <POLYGON [°]>, and abbreviated variable #> #   names ¹​Concelho, ²​Distrito, ³​AREA_EA_Ha, ⁴​AREA_T_Ha, ⁵​Des_Simpli"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_eu.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","title":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","text":"Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/nuts#nuts16","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_eu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","text":"","code":"ll_get_nuts_eu(   nuts_id = NULL,   nuts_name = NULL,   level = 3,   resolution = 60,   year = 2021,   silent = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_eu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","text":"nuts_id NUTS id. Must correspond level given. e.g. \"DE149\" NUTS3 regionion Sigmaringen Germany. nuts_name Name NUTS region. Run ll_get_nuts_eu() check valid values NUTS_NAME column. level Defaults 3, corresponding nuts3. Available values : 0, 1, 2, 3. resolution Defaults \"60\", 1:60 Million. Available values: 20, 10, 3, 1 (1 highest quality available). year Defaults 2021 Available values: 2021, 2016, 2013, 2010, 2006, 2003","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_eu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","text":"NUTS sf format","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_eu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets NUTS as sf object from Eurostat's website — ll_get_nuts_eu","text":"","code":"ll_get_nuts_eu() #> ℹ © EuroGeographics for the administrative boundaries #> ℹ Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/countries #> Simple feature collection with 1514 features and 9 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -61.8407 ymin: -21.3757 xmax: 55.8498 ymax: 80.7991 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,514 × 10 #>    NUTS_ID LEVL_CODE CNTR_CODE NAME_LATN   NUTS_…¹ MOUNT…² URBN_…³ COAST…⁴ FID   #>    <chr>       <int> <chr>     <chr>       <chr>     <int>   <int>   <int> <chr> #>  1 DE149           3 DE        Sigmaringen Sigmar…       4       3       3 DE149 #>  2 DE211           3 DE        Ingolstadt… Ingols…       4       2       3 DE211 #>  3 DE212           3 DE        München, K… Münche…       4       1       3 DE212 #>  4 DE213           3 DE        Rosenheim,… Rosenh…       4       2       3 DE213 #>  5 DE214           3 DE        Altötting   Altött…       4       2       3 DE214 #>  6 DE215           3 DE        Berchtesga… Bercht…       3       2       3 DE215 #>  7 DE216           3 DE        Bad Tölz-W… Bad Tö…       2       2       3 DE216 #>  8 DE217           3 DE        Dachau      Dachau        4       2       3 DE217 #>  9 DE218           3 DE        Ebersberg   Ebersb…       4       2       3 DE218 #> 10 DE219           3 DE        Eichstätt   Eichst…       4       2       3 DE219 #> # … with 1,504 more rows, 1 more variable: geometry <MULTIPOLYGON [°]>, and #> #   abbreviated variable names ¹​NUTS_NAME, ²​MOUNT_TYPE, ³​URBN_TYPE, ⁴​COAST_TYPE"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_nuts_it","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_nuts_it","text":"2019 / WGS84 UTM32N","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_nuts_it","text":"","code":"ll_get_nuts_it(   name = NULL,   level = 2,   year = 2022,   resolution = \"low\",   silent = FALSE,   no_check_certificate = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_nuts_it","text":"level Defaults \"2\", .e. regioni. Available: \"3\" (.e. province), \"lau\", local administrative units. year Defaults 2022 (latest available). resolution Defaults \"low\". Valid values either \"low\" \"high\". no_check_certificate Logical, defaults FALSE. Enable certificate issues, aware security implications.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions and provinces in Italy (high detail, CC-BY Istat) — ll_get_nuts_it","text":"","code":"ll_set_folder(fs::path(fs::path_home_r(), \"R\")) #> /home/runner/R ll_get_nuts_it() #> ℹ Source: https://www.istat.it/it/archivio/222527 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/generalizzati/Limiti01012022_g.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/generalizzati/Limiti01012022_g.zip' ll_get_nuts_it(name = \"Rimini\", level = 3) #> ℹ Source: https://www.istat.it/it/archivio/222527 #> ℹ Istat (CC-BY) #> Warning: URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/generalizzati/Limiti01012022_g.zip': status was 'SSL connect error' #> Error in download.file(url = source_url, destfile = zip_file): cannot open URL 'https://www.istat.it/storage/cartografia/confini_amministrativi/generalizzati/Limiti01012022_g.zip'"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_us.html","id":null,"dir":"Reference","previous_headings":"","what":"Get US counties — ll_get_nuts_us","title":"Get US counties — ll_get_nuts_us","text":"Source: https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get US counties — ll_get_nuts_us","text":"","code":"ll_get_nuts_us(level = \"county\", resolution = \"500k\", year = 2018)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_us.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get US counties — ll_get_nuts_us","text":"level Defaults \"county\". Available options : \"cd116\" (congressional districts 116th Congress) resolution Defaults \"500k\", max available resolution. Available options : \"5m\" \"20m\" year Defaults 2018","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_nuts_us.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get US counties — ll_get_nuts_us","text":"","code":"ll_get_nuts_us(level = \"county\", resolution = \"500k\", year = 2018) #> ℹ Source: https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html #> Simple feature collection with 3233 features and 9 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -179.1489 ymin: -14.5487 xmax: 179.7785 ymax: 71.36516 #> Geodetic CRS:  NAD83 #> # A tibble: 3,233 × 10 #>    STATEFP COUNTYFP COUNTYNS AFFGEOID       GEOID NAME    LSAD      ALAND AWATER #>    <chr>   <chr>    <chr>    <chr>          <chr> <chr>   <chr>     <dbl>  <dbl> #>  1 21      007      00516850 0500000US21007 21007 Ballard 06       6.39e8 6.95e7 #>  2 21      017      00516855 0500000US21017 21017 Bourbon 06       7.50e8 4.83e6 #>  3 21      031      00516862 0500000US21031 21031 Butler  06       1.10e9 1.39e7 #>  4 21      065      00516879 0500000US21065 21065 Estill  06       6.56e8 6.52e6 #>  5 21      069      00516881 0500000US21069 21069 Fleming 06       9.03e8 7.18e6 #>  6 21      093      00516893 0500000US21093 21093 Hardin  06       1.61e9 1.75e7 #>  7 21      099      00516896 0500000US21099 21099 Hart    06       1.07e9 1.37e7 #>  8 21      131      00516912 0500000US21131 21131 Leslie  06       1.04e9 9.19e6 #>  9 21      151      00516919 0500000US21151 21151 Madison 06       1.13e9 1.53e7 #> 10 21      155      00516921 0500000US21155 21155 Marion  06       8.88e8 9.89e6 #> # … with 3,223 more rows, and 1 more variable: geometry <MULTIPOLYGON [°]>"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EU 1km population grid — ll_get_population_grid","title":"Get EU 1km population grid — ll_get_population_grid","text":"Source: https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/population-distribution-demography/geostat details: https://ec.europa.eu/eurostat/statistics-explained/index.php/Population_grids","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EU 1km population grid — ll_get_population_grid","text":"","code":"ll_get_population_grid(   year = 2018,   match_sf = NULL,   match_name = NULL,   match_country = NULL,   join = sf::st_intersects,   silent = FALSE,   population_grid_sf = NULL )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EU 1km population grid — ll_get_population_grid","text":"year Defaults 2018. Currently, EU population grid available year 2006, 2011, 2018. match_sf sf object matched population grid. given, full grid returned. match_name name used local caching. responsibility user keept consistent. given, data cached locally. match_country Defaults NULL. given, used speed processing. join function use filtering. Defaults sf::st_intersects. Alternative includes likes sf::st_within, sf::st_touches, etc. population_grid_sf Defaults NULL. given, uses one population grid reference. Useful bulk process items, removes need re-loading grid local storage iteration.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EU 1km population grid — ll_get_population_grid","text":"sf object population grid.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get High Resolution Population Density Maps + Demographic Estimates — ll_get_population_grid_hr","title":"Get High Resolution Population Density Maps + Demographic Estimates — ll_get_population_grid_hr","text":"Source: https://data.humdata.org/organization/facebook Details methodology: https://dataforgood.fb.com/docs/methodology-high-resolution-population-density-maps-demographic-estimates/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get High Resolution Population Density Maps + Demographic Estimates — ll_get_population_grid_hr","text":"","code":"ll_get_population_grid_hr(   geo,   match_sf = NULL,   match_name = NULL,   population_grid_sf = NULL,   join = sf::st_intersects,   file_format = \"CSV\",   dataset = \"population|general\",   source_url = NULL,   silent = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_population_grid_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get High Resolution Population Density Maps + Demographic Estimates — ll_get_population_grid_hr","text":"geo twe letter country code, \"\" Italy \"DE\" Germany match_sf sf object matched population grid. given, full grid returned. match_name name used local caching subset grid used. responsibility user keept consistent. given, data cached locally. file_format Defaults \"CSV\". available formats include \"GeoTIFF\", \"JSON\", \"zip\", \"GDAL Virtual Format\". Currently CSV supported. dataset Defaults \"population\". Beginning name dataset. alternatives, see e.g. population_grid_hr_metadata %>% dplyr::filter(country_code==\"\") %>% dplyr::distinct(name). Currently tested default value. source_url direct link zipped version csv file original database, automatic download country code work. example, Italy \"https://data.humdata.org/dataset/0eb77b21-06be-42c8-9245-2edaff79952f/resource/1e96f272-7d86-4108-b4ca-5a951a8b11a0/download/population_ita_2019-07-01.csv.zip\" silent","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Get countries as an sf object — ll_get_world","title":"Get countries as an sf object — ll_get_world","text":"Get countries sf object","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get countries as an sf object — ll_get_world","text":"","code":"ll_get_world(resolution = \"60\", year = 2020, name = NULL)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_get_world.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get countries as an sf object — ll_get_world","text":"resolution Defaults \"60\", 1:60 Million. Available values: 20, 10, 3, 1 (1 highest quality available)- year Defaults 2020. Available values: 2020, 2016, 2013, 2010, 2006, 2001","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Matches a data frame with longitude and latitude to an sf object — ll_match","title":"Matches a data frame with longitude and latitude to an sf object — ll_match","text":"Matches data frame longitude latitude sf object","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matches a data frame with longitude and latitude to an sf object — ll_match","text":"","code":"ll_match(   data,   longitude = 1,   latitude = 2,   join = sf::st_intersects,   sample = NULL,   match = longlat2map::ll_get_world() )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matches a data frame with longitude and latitude to an sf object — ll_match","text":"data data frame tibble column longitude one latitude onject sf class. sf object given, longitude latitude parameters ignored. longitude exact column name column index (e.g. 1 first column) longitude. Defaults 1. latitude exact column name column index (e.g. 1 first column) latitude. Defaults 2. join function sf class determining type join. Defaults sf::st_intersects. Check ?sf::st_join alternatives. sample Defaults NULL. given, runs matching subset original dataframe. Suggested testing particular working big datasets. match sf object matched given dataframe, defaults longlat2map::ll_get_world(). package facilitate obtaining alternative reference maps functions longlat2map::ll_get_nuts_eu() longlat2map::ll_get_nuts_us()","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matches a data frame with longitude and latitude to an sf object — ll_match","text":"sf object CRS 4326.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","title":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","text":"dataset names countries, continents, included Geofabrik database. used download files ll_osm_download()","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","text":"","code":"ll_osm_countries"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","text":"tibble continent Name continent country Name country link Link shapefiles tibble","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_countries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","text":"http://download.geofabrik.de/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_countries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Countries and geographic entities for which shapefiles are made availabile by Geofabrik — ll_osm_countries","text":"Links shapefiles stored tibbles. Unnest see , e.g. ll_osm_countries %>% tidyr::unnest(link) single country: ll_osm_countries %>% dplyr::filter(country == \"italy\") %>% tidyr::unnest(link)","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","title":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","text":"N.B. Names always correspond official name countries may include different geographic entities. full list available \"countries\" made available Geofabrik, see internal dataset ll_osm_countries. considered downloading files.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","text":"","code":"ll_osm_download(countries, overwrite = FALSE, wget = FALSE)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","text":"countries One country names. details available country names see dataset included package: ll_osm_countries overwrite Logical, defaults FALSE. true, downloads new files even already present. wget Logical, defaults FALSE. TRUE, downloads files wget (available), otherwise uses default method. Setting wget TRUE may contribute prevent download timeouts; notice apparent freeze download progress console common, mostly download just continuing background (reference, check file size folder.)","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","text":"Used side effects (downloads osm data).","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download OSM data for whole countries from Geofabrik. — ll_osm_download","text":"","code":"if (FALSE) { ll_osm_download(countries = \"Romania\") ll_osm_download(countries = c(\"chile\", \"colombia\")) }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","title":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","text":"See ll_osm_it_gpkg available files.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","text":"","code":"ll_osm_download_it(   level = \"comuni\",   name = NULL,   code = NULL,   overwrite = FALSE,   wget = FALSE,   quiet = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","text":"level One \"regioni\", \"provincie\", \"comuni\". Defaults \"comuni\". name Name geographic entity. Check ll_osm_it_gpkg ll_get_nuts_it() valid names. code Used alternative name. Check ll_osm_it_gpkg ll_get_nuts_it() valid values. wget Logical, defaults FALSE. TRUE, downloads files wget (available), otherwise uses default method. Setting wget TRUE may contribute prevent download timeouts; notice apparent freeze download progress console common, mostly download just continuing background (reference, check file size folder.) quiet Logical, defaults FALSE. TRUE messages download advancement printed.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","text":"Used side effects (downloads osm data).","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_download_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download OSM data in geopackage format for regions, provinces, and municipalities in Italy. — ll_osm_download_it","text":"","code":"if (FALSE) { ll_osm_download_it(level = \"comuni\", name = \"Trento\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","title":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","text":"See ll_osm_it_gpkg available files.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","text":"","code":"ll_osm_extract_it(   level = \"comuni\",   name = NULL,   code = NULL,   layer = \"lines\",   quiet = FALSE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","text":"level One \"regioni\", \"provincie\", \"comuni\". Defaults \"comuni\". name Name geographic entity. Check ll_osm_it_gpkg ll_get_nuts_it() valid names. code Used alternative name. Check ll_osm_it_gpkg ll_get_nuts_it() valid values. layer Defaults \"lines\". Must one \"points\", \"lines\", \"multilinestrings\", \"multipolygons\", \"other_relations\" quiet Logical, defaults FALSE. TRUE, supresses messages generated reading geopackage file.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","text":"sf object.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract OSM data for regions, provinces, and municipalities in Italy. — ll_osm_extract_it","text":"","code":"if (FALSE) { ll_osm_extract_it(level = \"comuni\", name = \"Trento\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","title":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","text":"Extract zip shape files roads previously downloaded","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","text":"","code":"ll_osm_extract_roads(countries, download_if_missing = TRUE, overwrite = FALSE)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_roads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","text":"countries name one geographic entities files typically previously downloaded ll_osm_download() download_if_missing Logical, defaults TRUE. TRUE, downloads country files ll_osm_download() available locally. overwrite Logical, defaults FALSE. TRUE, extracts files zip even folder already existing.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_roads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","text":"Nothing, used side effects (extracts shapefiles country-level zip files)","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_extract_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract from zip shape files of roads from previously downloaded — ll_osm_extract_roads","text":"","code":"if (FALSE) { ll_extract_roads(countries = \"Romania\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_lau_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","title":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","text":"Relies output ll_get_lau_eu() boundaries local administrative units.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_lau_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","text":"","code":"ll_osm_get_lau_streets(   gisco_id,   country = NULL,   unnamed_streets = TRUE,   lau_boundary_sf = NULL,   streets_sf = NULL,   country_code_type = \"eurostat\",   year = 2020,   fallback = TRUE )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_lau_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","text":"gisco_id Gisco identifier. country Name country included Geofabrik's datasets, always match common country names geography. details available country names see dataset included package: ll_osm_countries unnamed_streets Defaults TRUE. FALSE, drops streets missing \"name\" missing \"fclass\". lau_boundary_sf Defaults NULL. given, used speed processing. Must sf object ones output ll_get_lau_eu(). streets_sf Defaults NULL. given, used speed processing. Must sf object ones output ll_osm_get_roads(). country_code_type Defaults \"eurostat\". alternative common value \"iso2c\". See countrycode::codelist list available codes. year Year LAU boundaries, defaults recent (2020), passed ll_get_lau_eu(). Available starting 2011. fallback Logical, defaults TRUE. gisco_id match entity ll_get_lau_eu(), try alternatives boundaries based country code, including ll_get_nuts_eu(), ll_get_gadm(), ll_get_adm_ocha().","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_lau_streets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","text":"sf objects streets given LAU based OpenStreetMap","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_lau_streets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all streets available in OpenStreetMap located in given local\nadministrative unit. — ll_osm_get_lau_streets","text":"","code":"if (FALSE) { ll_osm_get_lau_streets(gisco_id = \"IT_022205\", unnamed_streets = FALSE)  # or if country name does not match  ll_osm_get_lau_streets(gisco_id = \"EL_01020204\", country = \"greece\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_nuts_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","title":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","text":"Relies output ll_get_nuts_eu() boundaries NUTS.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_nuts_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","text":"","code":"ll_osm_get_nuts_streets(   nuts_id,   level = 3,   resolution = 1,   country = NULL,   unnamed_streets = TRUE,   nuts_boundary_sf = NULL,   streets_sf = NULL,   country_code_type = \"eurostat\",   year = 2021 )"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_nuts_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","text":"nuts_id NUTS region identifier. country Name country included Geofabrik's datasets, always match common country names geography. details available country names see dataset included package: ll_osm_countries unnamed_streets Defaults TRUE. FALSE, drops streets missing \"name\" missing \"fclass\". streets_sf Defaults NULL. given, used speed processing. Must sf object ones output ll_osm_get_roads(). country_code_type Defaults \"eurostat\". alternative common value \"iso2c\". See countrycode::codelist list available codes. year Year LAU boundaries, defaults recent (2020), passed ll_get_lau_eu(). Available starting 2011.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_nuts_streets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","text":"sf objects streets given NUTS regions based OpenStreetMap","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_nuts_streets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all streets available in OpenStreetMap located in given NUTS. — ll_osm_get_nuts_streets","text":"","code":"if (FALSE) { ll_osm_get_nuts_streets(nuts_id = \"PT16D\", country = \"portugal\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","title":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","text":"Extract shape files roads previously downloaded","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","text":"","code":"ll_osm_get_roads(country, silent = FALSE)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_roads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","text":"country name one geographic entities files typically previously downloaded ll_osm_download() silent Defaults FALSE. TRUE, hides copyright notice. Useful e.g. using reports loops. copyright notice must still shown final output used.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_roads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","text":"roads country OpenStreetMap.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_get_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract shape files of roads from previously downloaded — ll_osm_get_roads","text":"","code":"if (FALSE) { ll_osm_get_roads(country = \"Romania\") }"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_it_gpkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic entities in Italy for which geopackage files are availabile — ll_osm_it_gpkg","title":"Geographic entities in Italy for which geopackage files are availabile — ll_osm_it_gpkg","text":"dataset names geographic entities available direct download geopackage files used download files ll_osm_download_it()","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_it_gpkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic entities in Italy for which geopackage files are availabile — ll_osm_it_gpkg","text":"","code":"ll_osm_it_gpkg"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_it_gpkg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geographic entities in Italy for which geopackage files are availabile — ll_osm_it_gpkg","text":"list tibbles","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_osm_it_gpkg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geographic entities in Italy for which geopackage files are availabile — ll_osm_it_gpkg","text":"https://osmit-estratti.wmcloud.org/","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_set_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Set folder for caching data — ll_set_folder","title":"Set folder for caching data — ll_set_folder","text":"Set folder caching data","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_set_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set folder for caching data — ll_set_folder","text":"","code":"ll_set_folder(path = NULL)"},{"path":"https://giocomai.github.io/latlon2map/reference/ll_set_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set folder for caching data — ll_set_folder","text":"path path location. folder exist, created.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/ll_set_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set folder for caching data — ll_set_folder","text":"path caching folder, previously set.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://giocomai.github.io/latlon2map/reference/population_grid_hr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"A data frame with links to High Resolution Population Density Maps distributed by Facebook on HDX — population_grid_hr_metadata","title":"A data frame with links to High Resolution Population Density Maps distributed by Facebook on HDX — population_grid_hr_metadata","text":"used download files ll_get_population_grid_hr()","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/population_grid_hr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data frame with links to High Resolution Population Density Maps distributed by Facebook on HDX — population_grid_hr_metadata","text":"","code":"population_grid_hr_metadata"},{"path":"https://giocomai.github.io/latlon2map/reference/population_grid_hr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data frame with links to High Resolution Population Density Maps distributed by Facebook on HDX — population_grid_hr_metadata","text":"tibble country Name country English country_code Two letter code used eurostat, see also countrycode::codelist$eurostat download_ulr Link zipped dataset url Link page describing dataset","code":""},{"path":"https://giocomai.github.io/latlon2map/reference/population_grid_hr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A data frame with links to High Resolution Population Density Maps distributed by Facebook on HDX — population_grid_hr_metadata","text":"https://data.humdata.org/","code":""},{"path":"https://giocomai.github.io/latlon2map/news/index.html","id":"latlon2map-0009005","dir":"Changelog","previous_headings":"","what":"latlon2map 0.0.0.9005","title":"latlon2map 0.0.0.9005","text":"Added NEWS.md file track changes package. add “date_extracted” attribute cached OpenStreetMap files","code":""}]
