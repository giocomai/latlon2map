% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ll_get_lau_eu.R
\name{ll_osm_get_lau_streets}
\alias{ll_osm_get_lau_streets}
\title{Get all streets available in OpenStreetMap located in given local
administrative unit.}
\usage{
ll_osm_get_lau_streets(
  gisco_id,
  country = NULL,
  unnamed_streets = TRUE,
  lau_boundary_sf = NULL,
  streets_sf = NULL,
  country_code_type = "eurostat",
  year = 2020,
  fallback = TRUE
)
}
\arguments{
\item{gisco_id}{Gisco identifier.}

\item{country}{Name of country as included in Geofabrik's datasets, does not
always match common country names or geography. For details on available
country names see the dataset included in this package: \code{ll_osm_countries}}

\item{unnamed_streets}{Defaults to TRUE. If FALSE, it drops all streets with
missing "name" or missing "fclass".}

\item{lau_boundary_sf}{Defaults to NULL. If given, used to speed up
processing. Must be an \code{sf} object such as the ones output by by \code{ll_get_lau_eu()}.}

\item{streets_sf}{Defaults to NULL. If given, used to speed up processing.
Must be an \code{sf} object such as the ones output by \code{ll_osm_get_roads()}.}

\item{country_code_type}{Defaults to "eurostat". An alternative common value
is "iso2c". See \code{countrycode::codelist} for a list of available codes.}

\item{year}{Year of LAU boundaries, defaults to most recent (2020), passed to
\code{ll_get_lau_eu()}. Available starting with 2011.}

\item{fallback}{Logical, defaults to TRUE. If a \code{gisco_id} does not match an
entity in \code{ll_get_lau_eu()}, try alternatives for the boundaries based on
the country code, including \code{ll_get_nuts_eu()}, \code{ll_get_gadm()}, and
\code{ll_get_adm_ocha()}.}
}
\value{
An \code{sf} objects with all streets of a given LAU based on
OpenStreetMap
}
\description{
Relies on the output of \code{ll_get_lau_eu()} for the boundaries of local
administrative units.
}
\examples{
\dontrun{
ll_osm_get_lau_streets(gisco_id = "IT_022205", unnamed_streets = FALSE)

# or if country name does not match

ll_osm_get_lau_streets(gisco_id = "EL_01020204", country = "greece")
}
}
